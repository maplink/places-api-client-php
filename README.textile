h1. Client PHP (5.2) para acesso aos Webservices de locais

h2. Como usar

h3. Configuração da url de acesso ao webservice e dados de autenticação

bc..         $host = "http://url-do-webservice";
        $login = "<login da sua licença>";
        $key = "<chave da sua licença>";
        $this->client = new HttpClientWrapper($host, new AuthenticationBuilder($login, $key));

h3. Pesquisa de locais

h4. Por Raio

bc..         $radius = 100;
        $latitude = -23.59;
        $longitude = -46.68;
        $placeSearcher = new PlaceSearcher($this->client, new UriBuilder(), new PlacesConverter());
        $places = $placeSearcher->byRadius($radius, $latitude, $longitude);

h5. Filtrada por termo e/ou categoria

bc..         $radius = 100;
        $latitude = -23.59;
        $longitude = -46.68;
        $term = "pizza";
        $categoryId = 66;
        $placeSearcher = new PlaceSearcher($this->client, new UriBuilder(), new PlacesConverter());
        $places = $placeSearcher->byRadius($radius, $latitude, $longitude, $term, $categoryId);

h4. Por Termo

bc..         $placeSearcher = new PlaceSearcher($this->client, new UriBuilder(), new PlacesConverter());
        $places = $placeSearcher->byTerm("pizza");

h5. Filtrada por cidade/estado

bc..         $term = "pizza";
        $city = "São Paulo";
        $state = "SP";
        $placeSearcher = new PlaceSearcher($this->client, new UriBuilder(), new PlacesConverter());
        $places = $placeSearcher->byTerm($term, $state, $city);

h4. Por Categoria

bc..         $placeSearcher = new PlaceSearcher($this->client, new UriBuilder(), new PlacesConverter());
        $places = $placeSearcher->byCategory(66);

h5. Filtrada por cidade/estado

bc..         $categoryId = 66;
        $city = "São Paulo";
        $state = "SP";
        $placeSearcher = new PlaceSearcher($this->client, new UriBuilder(), new PlacesConverter());
        $places = $placeSearcher->byCategory($category, $state, $city);

h4. Paginação

bc..         $radius = 100;
        $latitude = -23.59;
        $longitude = -46.68;
        $placeSearcher = new PlaceSearcher($this->client, new UriBuilder(), new PlacesConverter());
        $places = $placeSearcher->byRadius($radius, $latitude, $longitude);
        $nextPage = $placeSearcher->byUri($places->next);
        $previousPage = $placeSearcher->byUri($places->previous);
        
h3. Pesquisa de categorias

h4. Todas as categorias (disponíveis para o seu pacote)

bc..         $categoriesSearcher = new CategorySearcher($this->client);
        $categories = $categoriesSearcher->getAll();